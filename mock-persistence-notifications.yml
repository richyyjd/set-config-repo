spring:
  application:
    name: mock-persistence-notifications
  data:
    mongodb:
      host: localhost
      port: 27017
      uri: mongodb://localhost:27017/social-notifications-db
server:
  port: 8870
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
# Development profile
---
spring:
  profiles: dev
  data:
    mongodb:
      host: set-mongo-dev.digitalharbor.us
      port: 27017
      uri: mongodb://set-mongo-dev.digitalharbor.us:27017/social-notifications-db
server:
  port: 8870
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/
    healthcheck:
      enabled: true
# Production Profile

# Qa Profile
---
spring:
  profiles: qa
  data:
    mongodb:
      host: set-mongo-qa.digitalharbor.us
      port: 27017
      uri: mongodb://set-mongo-qa.digitalharbor.us:27017/social-notifications-db
server:
  port: 8870
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/
    healthcheck:
      enabled: true
# Production Profile
---
spring:
  profiles: production
  
# Production Profile
---
spring:
  profiles: dh-bo
  data:
    mongodb:
      host: 172.16.4.39
      port: 27017
      uri: mongodb://172.16.4.39:27017/social-notifications-db
server:
  port: 8870
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/
    healthcheck:
      enabled: true

# Development profile (local)
---
spring:
  profiles: devlocal
  data:
    mongodb:
      host: mongo
      port: 27017
      uri: mongodb://mongo:27017/social-notifications-db
server:
  port: 8870
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/
    healthcheck:
      enabled: true
